{"ast":null,"code":"var _jsxFileName = \"/home/root-pc/Desktop/INTERN/projects/proj1withredux/src/components/Addnew.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useHistory } from \"react-router\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n/* eslint-disable no-template-curly-in-string */\n\nconst validateMessages = {\n  required: \"${label} is required JZJHH!\",\n  types: {\n    email: \"${label} is not a valid email!\",\n    number: \"${label} is not a valid number!\"\n  },\n  number: {\n    range: \"${label} must be between ${min} and ${max}\"\n  }\n};\n\nfunction Addnew() {\n  _s();\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.email) {\n      errors.email = \"Required\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formik.values.email)) {\n      errors.email = \"Invalid email address\";\n    }\n\n    if (!values.name) {\n      errors.name = \"Required\";\n    } else if (values.name.length < 8) {\n      errors.name = \"Must be 8 characters or more\";\n    } //...\n\n\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\"\n    },\n    validate,\n    onSubmit: values => {\n      let latestData = localStorage.getItem(\"tableData\"); // console.log(\"latestData\", latestData);\n\n      let newData = JSON.parse(latestData); // console.log(\"newData\", newData);\n      // console.log(\"last_id\", newData[newData.length - 1].id);\n\n      newData.push({\n        id: newData[newData.length - 1].id + 1,\n        name: values.name,\n        email: values.email\n      }); // console.log(\"newData\", newData);\n\n      localStorage.setItem(\"tableData\", JSON.stringify(newData));\n      history.push(\"/table\");\n    }\n  });\n\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  let history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const handleSubmit = () => {\n    let latestData = localStorage.getItem(\"tableData\"); // console.log(\"latestData\", latestData);\n\n    let newData = JSON.parse(latestData); // console.log(\"newData\", newData);\n    // console.log(\"last_id\", newData[newData.length - 1].id);\n\n    newData.push({\n      id: newData[newData.length - 1].id + 1,\n      name: name,\n      email: email\n    }); // console.log(\"newData\", newData);\n\n    localStorage.setItem(\"tableData\", JSON.stringify(newData));\n    history.push(\"/table\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid main1\",\n    style: {\n      boxSizing: \"border-box\",\n      margin: \"0 auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex justify-content-center align-items-center h-100\",\n      style: {\n        marginTop: \"150px\",\n        marginRight: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\",\n        children: /*#__PURE__*/_jsxDEV(Form, { ...layout,\n          name: \"nest-messages\",\n          validateMessages: validateMessages,\n          onFinish: formik.handleSubmit,\n          labelCol: {\n            span: 5\n          },\n          wrapperCol: {\n            span: 19\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Name\",\n            name: \"name\" // rules={[{ required: true, message: \"Please input your Name!\" }]}\n            ,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              value: formik.values.name // onChange={(e) => setName(e.target.value)}\n              ,\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: \"12px\",\n                color: \"red\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\"\n              },\n              children: formik.errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Email\",\n            name: \"email\" // rules={[\n            //   {\n            //     type: \"email\",\n            //     required: true,\n            //     message: \"Please input your Email!\",\n            //   },\n            // ]}\n            ,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              value: formik.values.email // onChange={(e) => setEmail(e.target.value)}\n              ,\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: \"12px\",\n                color: \"red\",\n                marginTop: \"10px\",\n                marginBottom: \"10px\"\n              },\n              children: formik.errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            wrapperCol: { ...layout.wrapperCol,\n              offset: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Addnew, \"+BEUm/UP5sQJ/z8KfUKj1PxelGs=\", false, function () {\n  return [useFormik, useHistory];\n});\n\n_c = Addnew;\nexport default Addnew;\n\nvar _c;\n\n$RefreshReg$(_c, \"Addnew\");","map":{"version":3,"sources":["/home/root-pc/Desktop/INTERN/projects/proj1withredux/src/components/Addnew.tsx"],"names":["React","useState","Form","Input","Button","useHistory","useFormik","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","Addnew","validate","values","errors","test","formik","name","length","initialValues","onSubmit","latestData","localStorage","getItem","newData","JSON","parse","push","id","setItem","stringify","history","onFinish","console","log","setName","setEmail","handleSubmit","boxSizing","margin","marginTop","marginRight","handleChange","handleBlur","fontSize","color","marginBottom","offset"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Input, InputNumber, Button } from \"antd\";\nimport { useHistory } from \"react-router\";\nimport { Formik, useFormik, withFormik } from \"formik\";\nimport FormList from \"antd/lib/form/FormList\";\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\n/* eslint-disable no-template-curly-in-string */\nconst validateMessages = {\n  required: \"${label} is required JZJHH!\",\n  types: {\n    email: \"${label} is not a valid email!\",\n    number: \"${label} is not a valid number!\",\n  },\n  number: {\n    range: \"${label} must be between ${min} and ${max}\",\n  },\n};\n\nfunction Addnew() {\n  interface error1 {\n    name?: string;\n    email?: string;\n  }\n\n  const validate = (values: any) => {\n    const errors: error1 = {};\n\n    if (!values.email) {\n      errors.email = \"Required\";\n    } else if (\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formik.values.email)\n    ) {\n      errors.email = \"Invalid email address\";\n    }\n\n    if (!values.name) {\n      errors.name = \"Required\";\n    } else if (values.name.length < 8) {\n      errors.name = \"Must be 8 characters or more\";\n    }\n\n    //...\n\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      let latestData: any = localStorage.getItem(\"tableData\");\n      // console.log(\"latestData\", latestData);\n      let newData = JSON.parse(latestData);\n      // console.log(\"newData\", newData);\n      // console.log(\"last_id\", newData[newData.length - 1].id);\n      newData.push({\n        id: newData[newData.length - 1].id + 1,\n        name: values.name,\n        email: values.email,\n      });\n      // console.log(\"newData\", newData);\n      localStorage.setItem(\"tableData\", JSON.stringify(newData));\n      history.push(\"/table\");\n    },\n  });\n\n  const onFinish = (values: any) => {\n    console.log(values);\n  };\n  let history = useHistory();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const handleSubmit = () => {\n    let latestData: any = localStorage.getItem(\"tableData\");\n    // console.log(\"latestData\", latestData);\n    let newData = JSON.parse(latestData);\n    // console.log(\"newData\", newData);\n    // console.log(\"last_id\", newData[newData.length - 1].id);\n    newData.push({\n      id: newData[newData.length - 1].id + 1,\n      name: name,\n      email: email,\n    });\n    // console.log(\"newData\", newData);\n    localStorage.setItem(\"tableData\", JSON.stringify(newData));\n    history.push(\"/table\");\n  };\n\n  return (\n    <div\n      className=\"container-fluid main1\"\n      style={{\n        boxSizing: \"border-box\",\n        margin: \"0 auto\",\n      }}\n    >\n      <div\n        className=\"row d-flex justify-content-center align-items-center h-100\"\n        style={{ marginTop: \"150px\", marginRight: \"10px\" }}\n      >\n        <div className=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\n          <Form\n            {...layout}\n            name=\"nest-messages\"\n            validateMessages={validateMessages}\n            onFinish={formik.handleSubmit}\n            labelCol={{ span: 5 }}\n            wrapperCol={{ span: 19 }}\n          >\n            <Form.Item\n              label=\"Name\"\n              name=\"name\"\n              // rules={[{ required: true, message: \"Please input your Name!\" }]}\n            >\n              <Input\n                value={formik.values.name}\n                // onChange={(e) => setName(e.target.value)}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                name=\"name\"\n              />\n              {formik.errors.name ? (\n                <div\n                  style={{\n                    fontSize: \"12px\",\n                    color: \"red\",\n                    marginTop: \"10px\",\n                    marginBottom: \"10px\",\n                  }}\n                >\n                  {formik.errors.name}\n                </div>\n              ) : null}\n            </Form.Item>\n            <Form.Item\n              label=\"Email\"\n              name=\"email\"\n              // rules={[\n              //   {\n              //     type: \"email\",\n              //     required: true,\n              //     message: \"Please input your Email!\",\n              //   },\n              // ]}\n            >\n              <Input\n                value={formik.values.email}\n                // onChange={(e) => setEmail(e.target.value)}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                name=\"email\"\n              />\n              {formik.errors.email ? (\n                <div\n                  style={{\n                    fontSize: \"12px\",\n                    color: \"red\",\n                    marginTop: \"10px\",\n                    marginBottom: \"10px\",\n                  }}\n                >\n                  {formik.errors.email}\n                </div>\n              ) : null}\n            </Form.Item>\n            {/* <Form.Item\n          name={[\"user\", \"age\"]}\n          label=\"Age\"\n          rules={[{ required: true }]}\n        >\n          <Input\n            required\n            value={age}\n            onChange={(e) => setAge(e.target.value)}\n          />\n        </Form.Item> */}\n            {/* <Form.Item name={[\"user\", \"website\"]} label=\"Website\">\n          <Input />\n        </Form.Item> */}\n            {/* <Form.Item name={[\"user\", \"introduction\"]} label=\"Introduction\">\n          <Input.TextArea />\n        </Form.Item> */}\n            <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Addnew;\n"]},"metadata":{},"sourceType":"module"}