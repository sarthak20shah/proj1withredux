{"ast":null,"code":"var _jsxFileName = \"/home/root-pc/Desktop/INTERN/projects/proj1withredux/src/components/BaseFormik.tsx\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  email: \"\",\n  password: \"\"\n};\nconst SignInSchema = Yup.object().shape({\n  email: Yup.string().email().required(\"Email is required\"),\n  password: Yup.string().required(\"Password is required\").min(4, \"Password is too short - should be 4 chars minimum\")\n});\n\nconst BaseFormik = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: SignInSchema,\n    onSubmit: values => {\n      console.log(values);\n    },\n    children: formik => {\n      const {\n        errors,\n        touched,\n        isValid,\n        dirty\n      } = formik;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign in to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              name: \"email\",\n              id: \"email\",\n              className: errors.email && touched.email ? \"input-error\" : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"span\",\n              className: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\",\n              id: \"password\",\n              className: errors.password && touched.password ? \"input-error\" : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"span\",\n              className: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: !(dirty && isValid) ? \"disabled-btn\" : \"\",\n            disabled: !(dirty && isValid),\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BaseFormik;\nexport default BaseFormik;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseFormik\");","map":{"version":3,"sources":["/home/root-pc/Desktop/INTERN/projects/proj1withredux/src/components/BaseFormik.tsx"],"names":["Formik","Form","Field","ErrorMessage","Yup","initialValues","email","password","SignInSchema","object","shape","string","required","min","BaseFormik","values","console","log","formik","errors","touched","isValid","dirty"],"mappings":"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","sourcesContent":["import { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n};\n\nconst SignInSchema = Yup.object().shape({\n  email: Yup.string().email().required(\"Email is required\"),\n\n  password: Yup.string()\n    .required(\"Password is required\")\n    .min(4, \"Password is too short - should be 4 chars minimum\"),\n});\n\nconst BaseFormik = () => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={SignInSchema}\n      onSubmit={(values) => {\n        console.log(values);\n      }}\n    >\n      {(formik) => {\n        const { errors, touched, isValid, dirty } = formik;\n        return (\n          <div className=\"container\">\n            <h1>Sign in to continue</h1>\n            <Form>\n              <div className=\"form-row\">\n                <label htmlFor=\"email\">Email</label>\n                <Field\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  className={\n                    errors.email && touched.email ? \"input-error\" : null\n                  }\n                />\n                <ErrorMessage name=\"email\" component=\"span\" className=\"error\" />\n              </div>\n\n              <div className=\"form-row\">\n                <label htmlFor=\"password\">Password</label>\n                <Field\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  className={\n                    errors.password && touched.password ? \"input-error\" : null\n                  }\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"span\"\n                  className=\"error\"\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                className={!(dirty && isValid) ? \"disabled-btn\" : \"\"}\n                disabled={!(dirty && isValid)}\n              >\n                Sign In\n              </button>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\nexport default BaseFormik;\n"]},"metadata":{},"sourceType":"module"}