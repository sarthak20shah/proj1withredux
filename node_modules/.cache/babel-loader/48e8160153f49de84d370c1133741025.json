{"ast":null,"code":"var _jsxFileName = \"/home/root-pc/Desktop/INTERN/projects/my-app/src/components/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const onFinish = values => {\n    console.log(\"Received values of form: \", values);\n  };\n\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let history = useHistory();\n\n  const handleSubmit = e => {\n    // e.preventDefault();\n    // console.log(name + \"\" + password);\n    let allUserData = localStorage.getItem(\"allUserData\");\n    let all = JSON.parse(allUserData);\n    console.log(\"all\", all); // let password1 = localStorage.getItem(\"password\");\n    // console.log(email1 + \"   \" + password1);\n\n    let arr = all.filter(item => {\n      return item.email == name && item.password == password;\n    });\n    console.log(\"arr\", arr);\n\n    if (arr.length !== 0) {\n      history.push(\"/table\");\n      toast.success(\"login successful\"); // check --> if --> arr.bday === today's date { toste}\n    } else {\n      toast.error(\"enter correct login information\");\n    } // if (email1 === name && password === password1) {\n    //   history.push(\"/table\");\n    //   toast.success(\"logged in\");\n    // } else {\n    //   toast.error(\"try to log in again with correct info\");\n    // }\n    // const usedata: any = localStorage.getItem(\"allUserData\");\n    // const allUserData = JSON.parse(usedata);\n    // if (allUserData.length < 1) {\n    //   // const newUserData = { name, email, password };\n    //   allUserData.push(newUserData);\n    //   // localStorage.setItem(\"allUserData\", JSON.stringify(allUserData));\n    //   history.push(\"/login\");\n    // } else {\n    //   const isUserDataAvailable = allUserData.find((element: any) => {\n    //     return element.email === email;\n    //   });\n    //   console.log(\"isUserDataAvailable\", isUserDataAvailable);\n    //   if (isUserDataAvailable !== undefined) {\n    //     toast.error(\"EMAIL IS ALREADY TAKEN\");\n    //   } else {\n    //     const newUserData = { name, email, password };\n    //     allUserData.push(newUserData);\n    //     localStorage.setItem(\"allUserData\", JSON.stringify(allUserData));\n    //     toast.success(\"SIGN UP SUCCESSFUL\");\n    //     history.push(\"/login\");\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-md-4 col-md-offset-5 align-center\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: \"normal_login\",\n          className: \"login-form\",\n          initialValues: {\n            remember: true\n          },\n          onFinish: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"username\",\n            rules: [{\n              required: true,\n              message: \"Please input your Username!\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }, this),\n              placeholder: \"Username\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: \"Please input your Password!\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 25\n              }, this),\n              type: \"password\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"remember\",\n              valuePropName: \"checked\",\n              noStyle: true,\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                children: \"Remember me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              className: \"login-form-button\" // onClick={() => handleSubmit}\n              ,\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"kodizRP0HhwoN89pPhDhQ/2n+fY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/root-pc/Desktop/INTERN/projects/my-app/src/components/Login.tsx"],"names":["Form","Input","Button","Checkbox","UserOutlined","LockOutlined","useState","useHistory","toast","Login","onFinish","values","console","log","name","setName","password","setPassword","history","handleSubmit","e","allUserData","localStorage","getItem","all","JSON","parse","arr","filter","item","email","length","push","success","error","remember","required","message","target","value"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Checkbox, Row, Col } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Login = () => {\n  const onFinish = (values: any) => {\n    console.log(\"Received values of form: \", values);\n  };\n\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let history = useHistory();\n\n  const handleSubmit = (e: any) => {\n    // e.preventDefault();\n    // console.log(name + \"\" + password);\n    let allUserData: any = localStorage.getItem(\"allUserData\");\n    let all = JSON.parse(allUserData);\n    console.log(\"all\", all);\n    // let password1 = localStorage.getItem(\"password\");\n    // console.log(email1 + \"   \" + password1);\n    let arr = all.filter((item: any) => {\n      return item.email == name && item.password == password;\n    });\n    console.log(\"arr\", arr);\n    if (arr.length !== 0) {\n      history.push(\"/table\");\n      toast.success(\"login successful\");\n      // check --> if --> arr.bday === today's date { toste}\n    } else {\n      toast.error(\"enter correct login information\");\n    }\n\n    // if (email1 === name && password === password1) {\n    //   history.push(\"/table\");\n    //   toast.success(\"logged in\");\n    // } else {\n    //   toast.error(\"try to log in again with correct info\");\n    // }\n\n    // const usedata: any = localStorage.getItem(\"allUserData\");\n    // const allUserData = JSON.parse(usedata);\n    // if (allUserData.length < 1) {\n    //   // const newUserData = { name, email, password };\n    //   allUserData.push(newUserData);\n    //   // localStorage.setItem(\"allUserData\", JSON.stringify(allUserData));\n    //   history.push(\"/login\");\n    // } else {\n    //   const isUserDataAvailable = allUserData.find((element: any) => {\n    //     return element.email === email;\n    //   });\n    //   console.log(\"isUserDataAvailable\", isUserDataAvailable);\n    //   if (isUserDataAvailable !== undefined) {\n    //     toast.error(\"EMAIL IS ALREADY TAKEN\");\n    //   } else {\n    //     const newUserData = { name, email, password };\n    //     allUserData.push(newUserData);\n    //     localStorage.setItem(\"allUserData\", JSON.stringify(allUserData));\n    //     toast.success(\"SIGN UP SUCCESSFUL\");\n    //     history.push(\"/login\");\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"form-group col-md-4 col-md-offset-5 align-center\">\n          <Form\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{ remember: true }}\n            onFinish={handleSubmit}\n          >\n            <Form.Item\n              name=\"username\"\n              rules={[\n                { required: true, message: \"Please input your Username!\" },\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Username\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                { required: true, message: \"Please input your Password!\" },\n              ]}\n            >\n              <Input\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                type=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Item>\n            <Form.Item>\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                <Checkbox>Remember me</Checkbox>\n              </Form.Item>\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                // onClick={() => handleSubmit}\n              >\n                Log in\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}