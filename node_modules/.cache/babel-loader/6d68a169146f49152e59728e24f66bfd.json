{"ast":null,"code":"var _jsxFileName = \"/home/root-pc/Desktop/INTERN/projects/my-app/src/components/Ed.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Table, Input, InputNumber, Popconfirm, Form, Typography, Button } from \"antd\";\nimport { useHistory } from \"react-router\";\n// import Modal from \"antd/lib/modal/Modal\";\nimport { Modal } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst originData = [];\n\nfor (let i = 0; i < 20; i++) {\n  originData.push({\n    key: i.toString(),\n    name: `Edrward ${i}`,\n    id: i,\n    email: `London Park no. ${i}`\n  });\n}\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === \"number\" ? /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 46\n  }, this) : /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 64\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: true,\n        message: `Please Input ${title}!`\n      }],\n      children: inputNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditableCell;\n\nconst Ed = () => {\n  _s();\n\n  const [form] = Form.useForm();\n  const [data, setData] = useState(originData);\n  const [editingKey, setEditingKey] = useState(\"\");\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  let history = useHistory();\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue({\n      name: \"\",\n      id: \"\",\n      email: \"\",\n      ...record\n    });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n  };\n\n  const save = async key => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        setData(newData);\n        setEditingKey(\"\");\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey(\"\");\n      }\n    } catch (errInfo) {\n      console.log(\"Validate Failed:\", errInfo);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Hello this is from console log use effect\");\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(data => {\n      console.log(\"response\", data); // setData(data);\n\n      if (localStorage.getItem(\"tableData\") === null) localStorage.setItem(\"tableData\", JSON.stringify(data)); // console.log(\"data\", data);\n\n      let tempData = localStorage.getItem(\"tableData\");\n      let jsonTempData = JSON.parse(tempData);\n      let finaData = [];\n      jsonTempData.map(ele => {\n        let temp = {};\n        temp.key = ele.id;\n        temp.name = ele.name;\n        temp.id = ele.id;\n        temp.email = ele.email;\n        finaData.push(temp);\n      });\n      console.log(\"finalData\", finaData);\n      setData(finaData);\n    });\n  }, []);\n\n  const handleAdd = () => {\n    // const newData: any = {\n    //   key: \"1\",\n    //   name: `Edward King `,\n    //   id: 32,\n    //   email: `London, Park Lane no. `,\n    // };\n    // this.setState({\n    //   dataSource: [...dataSource, newData],\n    //   count: count + 1,\n    // });\n    // setData([...data, newData]);\n    history.push(\"/addnew\");\n  };\n\n  const dataSource = [...data];\n\n  const handleDelete = key => {\n    console.log(\"datasource\", dataSource);\n    let anyData = dataSource.filter(item => item.key !== key);\n    console.log(\"anyData\", anyData);\n    setData(anyData);\n  };\n\n  let anyData2;\n\n  const showModal = key => {\n    anyData2 = dataSource.filter(item => item.key === key);\n    console.log(\"anyData2\", anyData2[0]);\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const columns = [{\n    title: \"name\",\n    dataIndex: \"name\",\n    width: \"25%\",\n    editable: true\n  }, {\n    title: \"id\",\n    dataIndex: \"id\",\n    width: \"15%\",\n    editable: true\n  }, {\n    title: \"email\",\n    dataIndex: \"email\",\n    width: \"40%\",\n    editable: true\n  }, {\n    title: \"operation\",\n    dataIndex: \"operation\",\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"javascript:;\",\n          onClick: () => save(record.key),\n          style: {\n            marginRight: 8\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: cancel,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography.Link, {\n        disabled: editingKey !== \"\",\n        onClick: () => edit(record),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    title: \"operation\",\n    dataIndex: \"operation\",\n    render: (_, record) => data.length >= 1 ? /*#__PURE__*/_jsxDEV(Popconfirm, {\n      title: \"Sure to delete?\",\n      onConfirm: () => handleDelete(record.key),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }, this) : null\n  }, {\n    title: \"operation\",\n    dataIndex: \"operation\",\n    render: (_, record) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => showModal(record.key),\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Basic Modal\",\n        visible: isModalVisible,\n        onOk: handleOk,\n        onCancel: handleCancel,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"key is: \", record.key]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Some contents...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Some contents...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return { ...col,\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === \"id\" ? \"number\" : \"text\",\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-primary btn-raised\",\n      style: {\n        margin: \"50px\"\n      },\n      onClick: handleAdd,\n      children: \"Add new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      component: false,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        components: {\n          body: {\n            cell: EditableCell\n          }\n        },\n        bordered: true,\n        dataSource: data,\n        rowKey: \"ffgf\",\n        columns: mergedColumns,\n        rowClassName: \"editable-row\",\n        pagination: {\n          onChange: cancel\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Ed, \"2lX7KC32P+s5znglDWRzNC9IgeE=\", false, function () {\n  return [Form.useForm, useHistory];\n});\n\n_c2 = Ed;\nexport default Ed;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableCell\");\n$RefreshReg$(_c2, \"Ed\");","map":{"version":3,"sources":["/home/root-pc/Desktop/INTERN/projects/my-app/src/components/Ed.tsx"],"names":["React","useState","useEffect","Table","Input","InputNumber","Popconfirm","Form","Typography","Button","useHistory","Modal","originData","i","push","key","toString","name","id","email","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","margin","required","message","Ed","form","useForm","data","setData","editingKey","setEditingKey","isModalVisible","setIsModalVisible","history","isEditing","edit","setFieldsValue","cancel","save","row","validateFields","newData","findIndex","item","splice","errInfo","console","log","fetch","then","response","json","localStorage","getItem","setItem","JSON","stringify","tempData","jsonTempData","parse","finaData","map","ele","temp","handleAdd","dataSource","handleDelete","anyData","filter","anyData2","showModal","handleOk","handleCancel","columns","width","editable","render","_","marginRight","length","mergedColumns","col","onCell","body","cell","onChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  Input,\n  InputNumber,\n  Popconfirm,\n  Form,\n  Typography,\n  Button,\n} from \"antd\";\nimport { useHistory } from \"react-router\";\nimport { toast } from \"react-toastify\";\n// import Modal from \"antd/lib/modal/Modal\";\nimport { Modal } from \"antd\";\n\ninterface Item {\n  key: string;\n  name: string;\n  id: number;\n  email: string;\n}\n\nconst originData: Item[] = [];\nfor (let i = 0; i < 20; i++) {\n  originData.push({\n    key: i.toString(),\n    name: `Edrward ${i}`,\n    id: i,\n    email: `London Park no. ${i}`,\n  });\n}\n\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\n  editing: boolean;\n  dataIndex: string;\n  title: any;\n  inputType: \"number\" | \"text\";\n  record: Item;\n  index: number;\n  children: React.ReactNode;\n}\n\nconst EditableCell: React.FC<EditableCellProps> = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\n\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{ margin: 0 }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n\nconst Ed = () => {\n  const [form] = Form.useForm();\n  const [data, setData] = useState(originData);\n  const [editingKey, setEditingKey] = useState(\"\");\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  let history = useHistory();\n\n  const isEditing = (record: Item) => record.key === editingKey;\n\n  const edit = (record: Partial<Item> & { key: React.Key }) => {\n    form.setFieldsValue({ name: \"\", id: \"\", email: \"\", ...record });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n  };\n\n  const save = async (key: React.Key) => {\n    try {\n      const row = (await form.validateFields()) as Item;\n\n      const newData = [...data];\n      const index = newData.findIndex((item) => key === item.key);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, {\n          ...item,\n          ...row,\n        });\n        setData(newData);\n        setEditingKey(\"\");\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey(\"\");\n      }\n    } catch (errInfo) {\n      console.log(\"Validate Failed:\", errInfo);\n    }\n  };\n  useEffect(() => {\n    console.log(\"Hello this is from console log use effect\");\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"response\", data);\n        // setData(data);\n        if (localStorage.getItem(\"tableData\") === null)\n          localStorage.setItem(\"tableData\", JSON.stringify(data));\n        // console.log(\"data\", data);\n        let tempData: any = localStorage.getItem(\"tableData\");\n        let jsonTempData = JSON.parse(tempData);\n        let finaData: any = [];\n        jsonTempData.map((ele: any) => {\n          let temp: any = {};\n          temp.key = ele.id;\n          temp.name = ele.name;\n          temp.id = ele.id;\n          temp.email = ele.email;\n          finaData.push(temp);\n        });\n        console.log(\"finalData\", finaData);\n        setData(finaData);\n      });\n  }, []);\n\n  const handleAdd = () => {\n    // const newData: any = {\n    //   key: \"1\",\n    //   name: `Edward King `,\n    //   id: 32,\n    //   email: `London, Park Lane no. `,\n    // };\n    // this.setState({\n    //   dataSource: [...dataSource, newData],\n    //   count: count + 1,\n    // });\n    // setData([...data, newData]);\n    history.push(\"/addnew\");\n  };\n  const dataSource: any = [...data];\n  const handleDelete = (key: React.Key) => {\n    console.log(\"datasource\", dataSource);\n    let anyData: any = dataSource.filter((item: any) => item.key !== key);\n    console.log(\"anyData\", anyData);\n    setData(anyData);\n  };\n  let anyData2;\n  const showModal = (key: any) => {\n    anyData2 = dataSource.filter((item: any) => item.key === key);\n    console.log(\"anyData2\", anyData2[0]);\n\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n  const columns = [\n    {\n      title: \"name\",\n      dataIndex: \"name\",\n      width: \"25%\",\n      editable: true,\n    },\n    {\n      title: \"id\",\n      dataIndex: \"id\",\n      width: \"15%\",\n      editable: true,\n    },\n    {\n      title: \"email\",\n      dataIndex: \"email\",\n      width: \"40%\",\n      editable: true,\n    },\n    {\n      title: \"operation\",\n      dataIndex: \"operation\",\n      render: (_: any, record: Item) => {\n        const editable = isEditing(record);\n        return editable ? (\n          <span>\n            <a\n              href=\"javascript:;\"\n              onClick={() => save(record.key)}\n              style={{ marginRight: 8 }}\n            >\n              Save\n            </a>\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n              <a>Cancel</a>\n            </Popconfirm>\n          </span>\n        ) : (\n          <Typography.Link\n            disabled={editingKey !== \"\"}\n            onClick={() => edit(record)}\n          >\n            Edit\n          </Typography.Link>\n        );\n      },\n    },\n\n    {\n      title: \"operation\",\n      dataIndex: \"operation\",\n      render: (_: any, record: { key: React.Key }) =>\n        data.length >= 1 ? (\n          <Popconfirm\n            title=\"Sure to delete?\"\n            onConfirm={() => handleDelete(record.key)}\n          >\n            <a>Delete</a>\n          </Popconfirm>\n        ) : null,\n    },\n    {\n      title: \"operation\",\n      dataIndex: \"operation\",\n      render: (_: any, record: { key: React.Key }) => (\n        <>\n          <Button type=\"primary\" onClick={() => showModal(record.key)}>\n            View\n          </Button>\n          <Modal\n            title=\"Basic Modal\"\n            visible={isModalVisible}\n            onOk={handleOk}\n            onCancel={handleCancel}\n          >\n            <p>key is: {record.key}</p>\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n          </Modal>\n        </>\n      ),\n    },\n  ];\n\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n    return {\n      ...col,\n      onCell: (record: Item) => ({\n        record,\n        inputType: col.dataIndex === \"id\" ? \"number\" : \"text\",\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    };\n  });\n\n  return (\n    <>\n      <Button\n        className=\"btn btn-primary btn-raised\"\n        style={{ margin: \"50px\" }}\n        onClick={handleAdd}\n      >\n        Add new\n      </Button>\n\n      <Form form={form} component={false}>\n        <Table\n          components={{\n            body: {\n              cell: EditableCell,\n            },\n          }}\n          bordered\n          dataSource={data}\n          rowKey={\"ffgf\"}\n          columns={mergedColumns}\n          rowClassName=\"editable-row\"\n          pagination={{\n            onChange: cancel,\n          }}\n        />\n      </Form>\n    </>\n  );\n};\n\nexport default Ed;\n"]},"metadata":{},"sourceType":"module"}